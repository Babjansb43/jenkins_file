pipeline{
    agent any
      parameters {
        booleanParam(name: 'autoApprove', defaultValue: true, description: 'Automatically run apply after generating plan?')
    }
    options {
// Only keep the 5 most recent builds
buildDiscarder(logRotator(numToKeepStr:'5'))
}
    stages(){
        stage("Checkot"){
            steps{
        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Babjansb43/terraform.git']])
            }
        }
        stage("Terraform init"){
            steps{
        sh'''
        terraform init -input=false
        '''
            }
        }
         stage("Terraform plan"){
            steps{
        sh'''
        terraform plan -input=false -out tfplan
        terraform show -no-color tfplan > tfplan.txt
        '''
            }
        }
        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }
            steps {
                script {
                    def plan = readFile 'tfplan.txt'
                    input message: "Do you want to apply the plan?",
                        parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }
    }
}
